{"version":3,"sources":["tags.js","studentItem.js","studentList.js","App.js","serviceWorker.js","index.js"],"names":["Tags","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tags","text","console","log","e","target","value","setState","preventDefault","tag","trim","addTag","id","refs","tagForm","react_default","a","createElement","className","map","idx","key","onSubmit","bind","type","placeholder","ref","onChange","handleChange","React","Component","StudentItem","total","i","student","grades","length","parseInt","avg","average","expanded","current","includesTag","forEach","el","slice","toLowerCase","src","pic","alt","firstName","lastName","onClick","toggleExpand","email","company","skill","Fragment","grade","style","marginLeft","StudentList","students","name","filtered","doubleFiltered","context","fetch","then","response","json","myJson","push","allStudents","_this2","filterName","filterTags","studentItem","App","studentList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac0274d9.chunk.js","sourcesContent":["import React from 'react';\n\nclass Tags extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {tags: this.props.tags || [], text: \"\"};\n        console.log(this.props.tags);\n    }\n\n    handleChange(e){\n        let text = e.target.value;\n        this.setState({text: text});\n    }\n\n    addTag(e){\n        e.preventDefault();\n        let tag = this.state.text.trim();\n        this.props.addTag(this.props.id, tag);\n    \n        this.refs.tagForm.value = \"\";\n        this.setState({text: \"\"});\n    }\n\n    render() {\n        return (\n        \n        <div>\n            <div className=\"tagList\">\n                {this.props.tags.map((tag, idx) => \n                <div className=\"tagItem\" key={idx}> {tag} </div>\n            )}\n            </div>\n            <form onSubmit={this.addTag.bind(this)}>\n                <input className=\"tagInput\" type=\"text\" placeholder=\"Add a tag\" ref=\"tagForm\" onChange={this.handleChange.bind(this)}/>\n            </form>\n        </div>\n           \n        );\n    }\n}\n\nexport default Tags;","import React from 'react';\nimport Tags from './tags';\n\nclass StudentItem extends React.Component {\n    constructor(props) {\n        super(props);\n        let total = 0;\n        for (var i = 0; i < this.props.student.grades.length; i++) {\n            total += parseInt(this.props.student.grades[i]);\n        }\n\n        let avg = total / this.props.student.grades.length;\n        this.state = {average: avg, expanded: false};\n    }\n\n    toggleExpand(){\n        let current = this.state.expanded;\n        this.setState({expanded: !current});\n    }\n\n    render() {\n        let includesTag = true;\n\n        if(this.props.tag){\n            if(!this.props.tags){\n                return(null);\n            }\n            const tag = this.props.tag;\n            includesTag = false;\n            this.props.tags.forEach(el => {\n                if(el.slice(0,tag.length).toLowerCase() === tag.toLowerCase()){\n                    includesTag = true;\n                }\n            });\n            if(!includesTag){\n                return(null);\n            }\n        }\n\n\n        return (\n            <div className=\"studentItem\">\n                <img src={this.props.student.pic} alt={this.props.student.firstName}/>\n                <h2> {this.props.student.firstName} {this.props.student.lastName} \n                    <span onClick={this.toggleExpand.bind(this)}>\n                        {this.state.expanded ? <i className=\"fas fa-minus\"></i> : <i className=\"fas fa-plus\"></i> }\n                    </span>\n                </h2>\n\n                <div className=\"studentInfo\">\n                    <p>Email: {this.props.student.email}</p>\n                    <p>Company: {this.props.student.company}</p>\n                    <p>Skill: {this.props.student.skill}</p>\n                    <p>Average: {this.state.average}%</p>\n                    {this.state.expanded ? \n                        <>\n                            <br></br>\n                            {this.props.student.grades.map((grade, idx) =>\n                                <p key={idx}> Test {idx + 1}: <span style={{marginLeft: \"35px\"}}>{grade}%</span></p>\n                            )}\n                            <Tags tags={this.props.tags || []} addTag={this.props.addTag} key={this.props.student.id} id={this.props.student.id} />\n\n                        </>\n                        : null\n                    }\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default StudentItem;","import React from 'react';\nimport StudentItem from './studentItem';\n\nclass StudentList extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {students: \"loading\",\n            name: \"\",\n            tag: \"\",\n            tags: {},\n            filtered: [],\n            doubleFiltered: []\n        };\n    }\n\n    componentDidMount(){\n        let context = this;\n        fetch('https://www.natedonato.com/circus/unfinished/data')\n            .then(function (response) {\n                let json = response.json();\n                return json;\n            })\n            .then(function (myJson) {\n                context.setState({students: myJson.students});\n                context.setState({filtered: myJson.students});\n                context.setState({doubleFiltered: myJson.students});\n        });\n    }\n\n    filterName(e){\n        let name;\n        if (e) {\n            name = e.target.value;\n            this.setState({ name: name });\n            console.log(name);\n        }else{\n            name = this.state.name;\n            console.log(name);\n        }\n\n        if(name.length === 0){\n            let allStudents = this.state.students;\n            this.setState({filtered: allStudents});\n            return;\n        }\n\n        let filtered = [];\n        this.state.students.forEach(student => {\n            if(student.firstName.slice(0, name.length).toLowerCase() === name.toLowerCase() || student.lastName.slice(0, name.length).toLowerCase() === name.toLowerCase()){\n                filtered.push(student);\n            }\n        });\n        \n        this.setState({ filtered: filtered });\n    }\n\n    filterTags(e){\n        let tag = e.target.value;\n        this.setState({tag: tag});\n    }\n\n    addTag(id, tag){\n\n        if(!this.state.tags[id]){\n            let tags = this.state.tags;\n            tags[id] = [tag];\n            this.setState({ tags: tags });\n        }else{\n            let tags = this.state.tags;\n            tags[id].push(tag);\n            this.setState({ tags: tags});\n        }\n    }\n    \n    render(){\n        if(this.state.students === \"loading\"){\n            return (<div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>)\n        }else{\n\n\n            return(\n                <div className=\"studentContainer\">\n                    <div className=\"searchName\">\n                        <input type=\"text\" placeholder=\"Search by name\" onChange={this.filterName.bind(this)}/>\n                        <input type=\"text\" placeholder=\"Search by tags\" onChange={this.filterTags.bind(this)}/>\n                    </div>\n                    {this.state.filtered.map(student => \n                        <StudentItem student={student} key={student.id} addTag={this.addTag.bind(this)} tags={this.state.tags[student.id]} tag={this.state.tag}/>\n                    )}\n                </div>\n            )\n        }\n    }\n}\n\nexport default StudentList;","import React from 'react';\nimport './App.css';\nimport StudentList from './studentList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StudentList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}